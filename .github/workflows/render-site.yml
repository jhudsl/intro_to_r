
# It was adapted by Candace Savonen for the OTTR_template https://github.com/jhudsl/OTTR_Template.

# This code was adapted by Carrie Wright to enable automated rendering of the site associated with this repository

name: Render html

# Controls when the action will run. Triggers the workflow on push
# events only for the master branch 
on:
  workflow_dispatch:
  push:
    branches: [ main, staging ]
    paths:
      - '**.Rmd'
      - '**.md'

jobs:

  yaml-check:
    name: Load user automation choices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

        # Use the yaml-env-action action.
      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: docs/config_automation.yml # Pass a space-separated list of configuration files. Rightmost files take precedence.
    outputs:
      toggle_style_code: "${{ env.STYLE_CODE }}"
      
  style-code:
    name: Style code
    needs: yaml-check
    runs-on: ubuntu-latest
    if: ${{needs.yaml-check.outputs.toggle_style_code == 'yes'}}
    container:
      image: jhudsl/course_template:main

    steps:
      - name: Checkout files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run styler
        run: Rscript -e "styler::style_file(list.files(pattern = 'Rmd$', recursive = TRUE, full.names = TRUE));warnings()"

      - name: Commit styled files
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"
          git add \*.Rmd
          git commit -m 'Style Rmds' || echo "No changes to commit"
          git push origin || echo "No changes to commit"
      
  render-main:
    needs: [yaml-check, style-code]
    runs-on: ubuntu-latest


          # install.packages("remotes") # in case we decide not to go with the container...
          # remotes::install_cran("rmarkdown")
          # remotes::install_deps(dependencies = TRUE)
    container:
      image: jhudsl/intro_to_r:1.0
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Give permission to access the repo
      - name: safelist repository
        run: |
          repo_name='${{ github.event.repository.name }}'
          git config --global --add safe.directory /__w/$repo_name/$repo_name

      - name: Diffset
        id: diffset
        uses: softprops/diffset@v1
        with:
          special_files: |
            *.Rmd
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          
      - name: Print Special Files
        if: diffset.outputs.special_files
        run: ls -al ${{ steps.diffset.outputs.special_files }}
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        # if: diffset.outputs.special_files
        uses: actions/checkout@v3
        ref: 'main'
        with:
          # get the full repo
          fetch-depth: 0
          # use github PAT
          token: ${{ secrets.GH_PAT }}

      # We want a fresh run of the renders each time - so first delete old html files
      - name: Delete old *.html
        run: Rscript -e "rmarkdown::clean_site(preview = FALSE)"

      # TODO: add this to docker
      - name: Install config package
        run: Rscript -e "install.packages('config')"
        
       # Now we want to render all the html files from the Rmd files
      - name: Run render html for the main site
        id: site
        run: Rscript -e "rmarkdown::render_site()" 
        
       # Render module details for syllabus
      - name: Render module details for syllabus
        run: Rscript "scripts/render_module_details_for_syllabus.R"
        
       # Render all module files
      - name: Render html of modules
        run: Rscript "scripts/render_modules.R"

       # Render the cheatsheets
      - name: Render Cheatsheet pdfs
        run: Rscript "scripts/render_cheatsheets.R" 
        
       # Render resource pdfs
      - name: Render Resource pdfs
        run: Rscript "scripts/render_resources.R" 
        
      # This checks on the steps before it and makes sure that they completed.
      # If the renders didn't complete we don't want to commit the file changes
      - name: Check on render steps
        if: steps.site.outcome != 'success'
        run: |
          echo site status ${{steps.site.outcome}}
          exit 1

      # Commit the rendered site files - html files and site_libs files
      - name: Commit rendered site files
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"
          git add . --force
          git commit -m 'Render site' || echo "No changes to commit"
          git pull --set-upstream origin main --allow-unrelated-histories --strategy-option=ours
          git push origin main || echo "No changes to push"


  render-pdf-lectures:
    name: Render pdf lecture slides
    needs: render-main
    runs-on: ubuntu-latest
    container:
      image: jhudsl/course_template:main
    strategy:
      matrix:
        modulenames: 
          - Intro
          - RStudio
          - Reproducibility
          - Basic_R
          - Data_Input
          - Subsetting_Data_in_R
          - Data_Summarization
          - Data_Classes
          - Data_Cleaning
          - Manipulating_Data_in_R
          - Esquisse_Data_Visualization
          - Data_Visualization
          - Factors
          - Statistics
          - Data_Output
          - Functions
          
    steps:
      - name: Checkout files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
        
      # Render pdfs of slides
      - name: Convert HTML to PDF
        uses: LukaszLapaj/html-to-pdf-action@master
        with:
          htmlFile: ./modules/${{ matrix.modulenames }}/${{ matrix.modulenames }}.html
          outputFile: ./modules/${{ matrix.modulenames }}/${{ matrix.modulenames }}.pdf


      # Commit the rendered site files - html files and site_libs files
      - name: Commit pdfs
        run: |
          git config --local user.email "itcrtrainingnetwork@gmail.com"
          git config --local user.name "jhudsl-robot"
          git add . --force
          git commit -m 'Render site' || echo "No changes to commit"
          git pull --set-upstream origin main --allow-unrelated-histories --strategy-option=ours
          git push --force || echo "No changes to push"
